buildscript {
    ext {
        springBootVersion = '2.6.6'
    }
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath('io.spring.gradle:dependency-management-plugin:1.0.11.RELEASE')
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'jacoco'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/libs-snapshot" }
}

ext {
    springCloudServiceBrokerVersion = '3.5.0'
}

dependencies {
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-jersey', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-configuration-processor', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-actuator', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-devtools', version: springBootVersion)
    implementation(group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: springBootVersion)
    implementation(group: 'org.springframework.cloud', name: 'spring-cloud-starter-open-service-broker', version: springCloudServiceBrokerVersion)
    implementation(group: 'org.glassfish.jersey.media', name: 'jersey-media-jaxb', version: '2.35')
    implementation(group: 'com.google.guava', name: 'guava', version: '28.2-jre')
    implementation(group: 'ch.qos.logback', name: 'logback-core', version: '1.2.8')
    implementation(group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.8')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.16.0')
    implementation(group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.16.0')


    implementation(group: 'com.emc.ecs', name: 'object-client', version: '3.1.3') {
        exclude module: "slf4j-log4j12"
        exclude module: "jsr311-api"
    }

    implementation(group: 'com.emc.ecs', name: 'bucket-wipe', version: '2.0.0') {
        exclude module: "log4j"
        exclude module: "slf4j-log4j12"
        exclude module: "jsr311-api"
    }

    testImplementation(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
    testImplementation(group: 'junit', name: 'junit', version: '4.13.1')
    testImplementation(group: 'org.mockito', name: 'mockito-core', version: '2.28.2')
    testImplementation(group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.5')
    testImplementation(group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.7')
    testImplementation(group: 'com.github.tomakehurst', name: 'wiremock-standalone', version: '2.26.1')
    testImplementation(group: 'com.github.paulcwarren', name: 'ginkgo4j', version: '1.0.11')
}

task wrapperOld(type: Wrapper) {
    gradleVersion = '6.8'
}


eclipse {
    classpath {
        containers.remove('org.eclipse.jdt.launching.JRE_CONTAINER')
        containers 'org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8'
    }
}

springBoot {
//  executable = true
}

task simulate(type: JavaExec) {
    classpath sourceSets.test.runtimeClasspath
    main = "com.emc.ecs.management.simulator.Server"
}

test {
    include '**/TestSuite.class'
    exclude 'com.emc.ecs.*.*.class'
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
